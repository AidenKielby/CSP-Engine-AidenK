# Available constraint types:
# - equal:         All listed variables must have the same value
# - not_equal:     All listed variables must have different values
# - value_in:      Variable must be one of a specific list of values
# - value_not_in:  Variable must NOT be one of a specific list
#
# Arithmetic constraints (use with a comparison type):
# - sum:           Sum of variables
# - product:       Product of variables
# - difference:    Absolute or directional difference
# - modulo:        Remainder of division
#
# Comparison types (used with arithmetic constraints):
# - equal
# - greater_than
# - less_than
#
# Modifier ('modifier'): a number added to the constraint output (CAN NOT be negative).
#
# Fairness Objective ('fairnessObjective') has two options:
# - 'balance', minimizing the difference between the variables
# - 'ignore', ignores the Fairness Objective and acts as a normal CSP
#
# Example Variable declaration:
# variables:
#   A1: [0, 1, 2, 3]
#
# Example constraint:
# - type: sum
#   vars: [A, B]
#   comparison: equal
#   value: 5
#   modifier: 0


fairnessObjective:
  objective: "balance"

variables:
  A1: [1,2,3,4,5,6,7,8,9]
  A2: [1,2,3,4,5,6,7,8,9]
  A3: [1,2,3,4,5,6,7,8,9]
  B1: [1,2,3,4,5,6,7,8,9]
  B2: [1,2,3,4,5,6,7,8,9]
  B3: [1,2,3,4,5,6,7,8,9]
  C1: [1,2,3,4,5,6,7,8,9]
  C2: [1,2,3,4,5,6,7,8,9]
  C3: [1,2,3,4,5,6,7,8,9]
constraints:
  # Row constraints
  - type: sum
    vars: [ A1, A2, A3 ]
    comparison: equal
    value: 15
    modifier: 0

  - type: sum
    vars: [ B1, B2, B3 ]
    comparison: equal
    value: 15
    modifier: 0

  - type: sum
    vars: [ C1, C2, C3 ]
    comparison: equal
    value: 15
    modifier: 0

  # Column constraints
  - type: sum
    vars: [ A1, B1, C1 ]
    comparison: equal
    value: 15
    modifier: 0

  - type: sum
    vars: [ A2, B2, C2 ]
    comparison: equal
    value: 15
    modifier: 0

  - type: sum
    vars: [ A3, B3, C3 ]
    comparison: equal
    value: 15
    modifier: 0

  # Diagonal constraints
  - type: sum
    vars: [ A1, B2, C3 ]
    comparison: equal
    value: 15
    modifier: 0

  - type: sum
    vars: [ A3, B2, C1 ]
    comparison: equal
    value: 15
    modifier: 0

  - type: not_equal
    vars: [ A1, A2, A3, B1, B2, B3, C1, C2, C3 ]
    modifier: 0